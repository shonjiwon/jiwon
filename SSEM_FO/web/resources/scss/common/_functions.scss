//em변환
$browser-context: $var-browser-context ; // Default
$browser-md-context: $var-browser-md-context ; // md
$browser-sm-context: $var-browser-sm-context ; // sm
$browser-xs-context: $var-browser-xs-context ; // xs
$browser-xxs-context: $var-browser-xxs-context ; // xxs

@function em($pixels, $context: $browser-context) {
  @if ($context == $browser-md-context) {
    @return #{ ($pixels * 0.831 ) / $context}em;
    
  }@else if ($context == $browser-sm-context) {
    @return #{ ($pixels * 0.688 ) /$context}em;

  }@else if ($context == $browser-xs-context) {
    @return #{ ($pixels * 0.500 ) /$context}em;

  }@else if ($context == $browser-xxs-context) {
    @return #{ ($pixels * 0.438 ) /$context}em;

  }@else{
    @return #{$pixels/$context}em;
  }
}


@function rem($pixels, $context: $browser-context) {
  @if ($context == $browser-md-context) {
    @return #{ ($pixels * 0.831 ) / $context}rem;
    
  }@else if ($context == $browser-sm-context) {
    @return #{ ($pixels * 0.688 ) /$context}rem;

  }@else if ($context == $browser-xs-context) {
    @return #{ ($pixels * 0.500 ) /$context}rem;

  }@else if ($context == $browser-xxs-context) {
    @return #{ ($pixels * 0.438 ) /$context}rem;
    
  }@else{
    @return #{$pixels/$context}rem;
  }
}




@function resRem($pixels, $type: null) {
  @if ( $type == "md") {
    @return rem($pixels, $browser-md-context);

  }@else if ( $type == "sm") {
    @return rem($pixels, $browser-sm-context);

  }@else if ( $type == "xs") {
    @return rem($pixels, $browser-xs-context);

  }@else if ( $type == "xxs") {
    @return rem($pixels, $browser-xxs-context);

  }@else{
    @return rem($pixels);
  }
}




// number
@function number($value) {
  @if type-of($value) == 'number' {
    @return $value;
  } @else if type-of($value) != 'string' {
    $_: log('Value for `to-number` should be a number or a string.');
  }
  
  $result: 0;
  $digits: 0;
  $minus: str-slice($value, 1, 1) == '-';
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);
  
  @for $i from if($minus, 2, 1) through str-length($value) {
    $character: str-slice($value, $i, $i);
    
    @if not (index(map-keys($numbers), $character) or $character == '.') {
      @return to-length(if($minus, -$result, $result), str-slice($value, $i))
    }
    
    @if $character == '.' {
      $digits: 1; 
    } @else if $digits == 0 {
      $result: $result * 10 + map-get($numbers, $character);  
    } @else {
      $digits: $digits * 10;
      $result: $result + map-get($numbers, $character) / $digits;
    }
  }
  
  @return if($minus, -$result, $result);;
}



@function svgIconSearch($color){
  $color: rgba($color, 0.999);
  $icon: "data:image/svg+xml,%3Csvg version='1.1' id='Capa_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 512 512' style='enable-background:new 0 0 512 512;' fill='#{$color}' xml:space='preserve'%3E%3Cg%3E%3Cg%3E%3Cpath d='M225.474,0C101.151,0,0,101.151,0,225.474c0,124.33,101.151,225.474,225.474,225.474 c124.33,0,225.474-101.144,225.474-225.474C450.948,101.151,349.804,0,225.474,0z M225.474,409.323 c-101.373,0-183.848-82.475-183.848-183.848S124.101,41.626,225.474,41.626s183.848,82.475,183.848,183.848 S326.847,409.323,225.474,409.323z'/%3E%3C/g%3E%3C/g%3E%3Cg%3E%3Cg%3E%3Cpath d='M505.902,476.472L386.574,357.144c-8.131-8.131-21.299-8.131-29.43,0c-8.131,8.124-8.131,21.306,0,29.43l119.328,119.328 c4.065,4.065,9.387,6.098,14.715,6.098c5.321,0,10.649-2.033,14.715-6.098C514.033,497.778,514.033,484.596,505.902,476.472z'/%3E%3C/g%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3C/svg%3E%0A";

  @return url($icon);

}

